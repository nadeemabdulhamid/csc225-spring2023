Basic Sorts - Worksheet


TRACE 1
Describe what's happening:



 47 38 43 33 61  8  9 77 48 18
  8 38 43 33 61 47  9 77 48 18
  8  9 43 33 61 47 38 77 48 18
  8  9 18 33 61 47 38 77 48 43
  8  9 18 33 61 47 38 77 48 43
  8  9 18 33 38 47 61 77 48 43
  8  9 18 33 38 43 61 77 48 47
  8  9 18 33 38 43 47 77 48 61
  8  9 18 33 38 43 47 48 77 61
  8  9 18 33 38 43 47 48 61 77


TRACE 2
Describe what's happening:



 47 38 43 33 61  8  9 77 48 18
 38 47 43 33 61  8  9 77 48 18
 38 43 47 33 61  8  9 77 48 18
 33 38 43 47 61  8  9 77 48 18
 33 38 43 47 61  8  9 77 48 18
  8 33 38 43 47 61  9 77 48 18
  8  9 33 38 43 47 61 77 48 18
  8  9 33 38 43 47 61 77 48 18
  8  9 33 38 43 47 61 77 48 18
  8  9 33 38 43 47 48 61 77 18
  8  9 18 33 38 43 47 48 61 77
ALGORITHM A goes with TRACE ____

NAME: ____________________________

    public static void sort(Comparable[] a) {
        int n = a.length;
        for (int i = 1; i < n; i++) {
            for (int j = i; j > 0 && less(a[j], a[j-1]); j--) {
                exch(a, j, j-1);
            }
        }
    }

Worst case # of compares (less()): ____________

Worst case # of exchanges (exch()): ____________

ALGORITHM B goes with TRACE _____

NAME: ____________________________

    public static void sort(Comparable[] a) {
        int n = a.length;
        for (int i = 0; i < n; i++) {
            int min = i;
            for (int j = i+1; j < n; j++) {
                if (less(a[j], a[min])) min = j;
            }
            exch(a, i, min);
        }
    }

Worst case # of compares (less()): ____________

Worst case # of exchanges (exch()): ____________